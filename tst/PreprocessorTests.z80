#macro Ifdef
  #ifdef bob
	.echo > OUTPUT_FILE "FAIL"
  #endif
  #define bob
  #ifdef bob
	.echo > OUTPUT_FILE "PASS"
  #endif
#endmacro

#macro Ifndef
  #define bob
  #ifndef bob
	#define you_failed
  #endif

  #ifndef you_failed
	.echo > OUTPUT_FILE "PASS"
  #endif
#endmacro

#macro Else
  .echo > OUTPUT_FILE ""
  #ifdef bob
	.echo >> OUTPUT_FILE "FAIL"
  #else
	#define bob
  #endif

  #ifndef bob
  #else
	.echo >> OUTPUT_FILE "PASS"
  #endif
#endmacro

#macro Else2
  .echo > OUTPUT_FILE ""

  #define you_win

  #define test
  #ifndef test
	#ifndef ap
	
	#else
	  #undef you_win
	#endif
  #endif

  #ifdef you_win
	.echo >> OUTPUT_FILE "PASS"
  #else
	.echo >> OUTPUT_FILE "FAIL"
  #endif
#endmacro

#macro Else3
  .echo > OUTPUT_FILE ""

  #define w 2
  #ifndef w\ #define ww 12\ #else\ #define ww eval(w)\ #endif

  #if ww = 2
	.echo >> OUTPUT_FILE "PASS"
  #else
	.echo >> OUTPUT_FILE "FAIL"
  #endif

#endmacro

#macro If
  .echo > OUTPUT_FILE ""
  #define if_test 20
  #if (if_test > 20) || (if_test < 20)
	.echo >> OUTPUT_FILE "FAIL1"
  #endif

  #if if_test != 20
	.echo >> OUTPUT_FILE "FAIL2"
  #endif

  #if if_test = 20 && 0
	.echo >> OUTPUT_FILE "FAIL3"
  #endif

  #if (if_test = 20 || 1) && 0
	.echo >> OUTPUT_FILE "FAIL: ", ((0 + 1) && 0)
  #endif

  #if ((if_test = 20) || 1) && 1 && (if_test < 21)
	.echo >> OUTPUT_FILE "PASS"
  #endif
#endmacro

#macro Elif
  .echo > OUTPUT_FILE ""
  #define if_test 20
  #if (if_test > 20) || (if_test < 20)
	.echo >> OUTPUT_FILE "FAIL1"
  #elif if_test != 20
	.echo >> OUTPUT_FILE "FAIL2"
  #elif if_test == 20 && 0
	.echo >> OUTPUT_FILE "FAIL3"
  #else
	.echo >> OUTPUT_FILE "P"
  #endif

  #if if_test == 20
	.echo >> OUTPUT_FILE "A"
  #elif if_test != 20
	.echo >> OUTPUT_FILE "FAIL4"
  #elif if_test == 20
	.echo >> OUTPUT_FILE "FAIL5"
  #else
	.echo >> OUTPUT_FILE "FAIL6"
  #endif

  #if if_test != 20
	.echo >> OUTPUT_FILE "FAIL7"
  #elif if_test == 20
	.echo >> OUTPUT_FILE "SS"
  #elif if_test == 20
	.echo >> OUTPUT_FILE "FAIL8"
  #else
	.echo >> OUTPUT_FILE "FAIL9"
  #endif
#endmacro

#macro Elif2
  .echo > OUTPUT_FILE ""
  #define if_test 20
  #if if_test = 21\ .echo >> OUTPUT_FILE "FAIL1"\ #elif if_test = 20\ .echo >> OUTPUT_FILE "PASS"\ #else\ .echo >> OUTPUT_FILE "FAIL2"\ #endif
#endmacro

#macro LessThan
  .echo > OUTPUT_FILE ""

  #define bob 20
  #if bob < 20
	.echo >> OUTPUT_FILE "FAIL"
  #else
	.echo >> OUTPUT_FILE "PASS"
  #endif
#endmacro

#macro LessThanEqualTo
  .echo > OUTPUT_FILE ""

  #define bob 20
  #if bob <= 20
	.echo >> OUTPUT_FILE "PA"
  #else
	.echo >> OUTPUT_FILE "FAIL1"
  #endif

  #if bob <= 21
	.echo >> OUTPUT_FILE "S"
  #else
	.echo >> OUTPUT_FILE "FAIL2"
  #endif

  #if bob <= 19
	.echo >> OUTPUT_FILE "FAIL3"
  #else
	.echo >> OUTPUT_FILE "S"
  #endif
#endmacro

#macro DoubleEquals
   .echo > OUTPUT_FILE ""
   #define test 20
   #if test == 20
	 .echo >> OUTPUT_FILE "PA"
   #endif
   #if test==20
	 .echo >> OUTPUT_FILE "SS"
   #endif
#endmacro

#macro Equals
   .echo > OUTPUT_FILE ""
   #define test 20
   #if test = 20
	 .echo >> OUTPUT_FILE "PA"
   #endif
   #if test = 10
	 .echo >> OUTPUT_FILE "FAIL"
   #else
	 .echo >> OUTPUT_FILE "SS"
   #endif
#endmacro

#macro LiteralMacro(@reg, lim)
	ld reg,lim
#endmacro

#macro LiteralMacroTest1()
	LiteralMacro(hl, 50)
#endmacro